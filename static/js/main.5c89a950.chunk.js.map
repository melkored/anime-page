{"version":3,"sources":["views/Main/static/round-loading.gif","actions/actionTypes.js","views/Main/component/loading.js","views/Main/container/searchResults.js","actions/index.js","views/Main/container/searchHeader.js","views/Main/container/detailedContent.js","views/Main/component/main.js","reducers/initialState.js","reducers/index.js","serviceWorker.js","sagas/baseUrl.js","sagas/index.js","index.js"],"names":["module","exports","__webpack_require__","p","GET_CONTENT","REQUEST_CONTENT","GET_DETAILED","REQUEST_DETAILED","Loading","react_default","a","createElement","className","src","loadingImage","alt","SearchResults","content","_this","this","sort","b","score","map","item","i","toSend","contentId","mal_id","episodes","key","onClick","props","getContentDetailed","image_url","width","title","loading","component_loading","loadingDiv","searchLoading","eachElement","Component","mapDispatchToProps","param","type","connect","state","SearchHeader","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","contentType","userText","onSelect","bind","assertThisInitialized","inputText","e","setState","target","value","_this2","placeholder","onChange","getContent","name","defaultChecked","DetailedContent","allGenres","genre","trailerUrl","left","window","screen","top","height","console","log","open","op","eachContent","openings","undefined","length","selected","chapters","authors","au","author","eachauthor","element","sequelContent","title_japanese","contentGenres","genres","chaptersEpisodes","synopsis","prequel","related","Prequel","sequel","Sequel","rank","popularity","rating","contentOpening2","opening_themes","contentEnding2","ending_themes","trailer","trailer_url","detailed","detailedLoading","showDetailed","responsiveDiv","Main","container_searchHeader","container_searchResults","container_detailedContent","initialState","reducer","arguments","action","objectSpread","payload","Boolean","location","hostname","match","baseUrl","contentWatcher","detailedWatcher","getDetailed","rootSaga","regenerator_default","wrap","_context","prev","next","takeLatest","stop","_marked","_context2","axios","get","sent","put","data","results","_marked2","_context3","_marked3","_context4","_marked4","_context5","all","_marked5","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","logger","run","ReactDOM","render","react_redux_es","component_main","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5c89a950.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/round-loading.5fe0e55f.gif\";","export const GET_CONTENT = \"GET_CONTENT\";\nexport const REQUEST_CONTENT = \"REQUEST_CONTENT\";\nexport const GET_DETAILED = \"GET_DETAILED\";\nexport const REQUEST_DETAILED = \"REQUEST_DETAILED\";","import React from 'react'\nimport loadingImage from '../static/round-loading.gif'\nimport '../static/loading.css'\n\nlet Loading = () => (\n    <div className={\"loading-bucket\"}>\n        <img src={loadingImage} alt=\"\"/>\n    </div>\n);\n\nexport default Loading","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport '../static/searchResults.css'\nimport {getContentDetailed} from \"../../../actions\";\nimport Loading from '../component/loading'\n\nclass SearchResults extends Component{\n\n    eachElement(content){\n        if(content){\n            let sortContent = content.sort(function(a, b) {\n                return b.score-a.score\n            });\n            return sortContent.map((item, i) => {\n                const toSend = {\n                    contentId:item.mal_id,\n                    episodes:item.episodes\n                };\n                return(\n                    <div key={item.mal_id} className={\"each-content\"} onClick={() => this.props.getContentDetailed(toSend)}>\n                        <img className={\"content-img\"} src={item.image_url} alt=\"\" width={\"100px\"}/>\n                        <div className={\"middle-div\"}>\n                            <div className={\"content-basic-info\"}>\n                                <span className={\"content-text\"}>{item.title}</span>\n                            </div>\n                        </div>\n                    </div>\n                )\n            })\n        }\n        else{\n            return(\n                <div className={\"no-content-to-show\"}>\n                    <span className={\"first-instruction\"}>¡Utiliza el búscador de arriba para encontrar los mejores animes y mangas!</span><br/><br/>\n                    <span className={\"first-instruction\"}>¿No sabes qué buscar? ¡Solo aprieta el botón de búsqueda y encontrarás el mejor contenido!</span>\n                </div>\n            )\n        }\n    }\n\n    loadingDiv(loading){\n        if(loading){\n            return(\n                <Loading/>\n            )\n        }else{\n            return null\n        }\n    }\n\n    render() {\n        return(\n            <div className={\"results-bucket child-bucket\"}>\n                <div className={\"all-result-content\"}>\n                    {this.loadingDiv(this.props.searchLoading)}\n                    {this.eachElement(this.props.content)}\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    content:state.content,\n    searchLoading:state.searchLoading\n});\n\nconst mapDispatchToProps = {\n    getContentDetailed:getContentDetailed\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchResults)","/* Accion para la obtención del contenido de búsqueda, enviando como paramentros, el tipo de contenido (anime o manga)\npudiendo tener o no el campo ingresado por el usuario  */\n\nimport { REQUEST_CONTENT, REQUEST_DETAILED } from \"./actionTypes\";\n\nexport const getContent = (param) => (\n    {\n        type: REQUEST_CONTENT,\n        param\n    }\n);\n\n/* Acción para la obtención del detalle de selección, enviando los parametros de ID del contenido seleccionado así como\n el tipo de contenido que se desea buscar */\n\nexport const getContentDetailed = (param) => (\n    {\n        type: REQUEST_DETAILED,\n        param\n    }\n);","import React, { Component } from 'react'\nimport { getContent } from \"../../../actions\";\nimport '../static/searchHeader.css'\nimport { connect } from 'react-redux';\n\nclass SearchHeader extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            contentType: \"anime\",\n            userText: \"\"\n        };\n        this.onSelect = this.onSelect.bind(this);\n        this.inputText = this.inputText.bind(this);\n    }\n\n    onSelect(e){\n        this.setState({\n            contentType:e.target.value\n        })\n    }\n\n    inputText(e){\n        this.setState({\n            userText:e.target.value\n        })\n    }\n\n    render() {\n        return(\n            <div className={\"search-header-bucket\"}>\n                <div className={\"search-input-div\"}>\n                    <input className={\"content-input\"} type=\"text\" placeholder={\"Busca por Anime o Manga\"} onChange={this.inputText}/>\n                    <button className={\"anime-btn search-btn\"} onClick={() => this.props.getContent(this.state)}>Buscar</button>\n                </div>\n                <div className={\"type-search-div\"}>\n                    <label className=\"\">\n                        <input type=\"radio\" name=\"content-type\" value={\"anime\"} defaultChecked onChange={this.onSelect}/>\n                        <span className=\"checkmark\"></span>\n                        Anime\n                    </label>\n                    <label className=\"\">\n                        <input type=\"radio\" name=\"content-type\" value={\"manga\"} onChange={this.onSelect} />\n                        <span className=\"checkmark\"></span>\n                        Manga\n                    </label>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = {\n    getContent:getContent\n};\n\nexport default connect(null, mapDispatchToProps)(SearchHeader)","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport '../static/detailedContent.css'\nimport Loading from \"../component/loading\";\n\nclass DetailedContent extends Component{\n\n    contentGenres(allGenres){\n        return allGenres.map((genre, i) => {\n            return(\n                <span className={\"content-badge\"} key={genre.mal_id}>{genre.name}</span>\n            )\n        })\n    }\n\n    trailer(trailerUrl){\n        if(trailerUrl){\n            const w = 1000;\n            const h = 700;\n            let left = (window.screen.width - w) / 2;\n            let top = (window.screen.height - h) / 3;\n            console.log(window.screen.width);\n            console.log(window.screen.height);\n            return(\n                <button className={\"anime-btn trailer-btn\"} onClick={() => window.open(trailerUrl, \"popupWindow\",\n                    'toolbar=no, location=no, directories=no, status=no, menubar=no, scrollbars=no, resizable=no, ' +\n                    'copyhistory=no, width='+w+', height='+h+', top='+top+', left='+left)}>Ver Trailer</button>\n            )\n        }else{\n            return null\n        }\n    }\n\n    eachContent(content){\n        return content.map((op, i) => {\n            return(\n                <tr>\n                    <td className={\"title\"} key={i}>{op}</td>\n                </tr>\n            )\n        })\n    }\n\n    contentOpening2(content){\n        if(content){\n            return(\n                <table>\n                    <tbody>\n                    <tr>\n                        <th className={\"ordinary-text\"}>Openings:</th>\n                    </tr>\n                    {this.eachContent(content)}\n                    </tbody>\n                </table>\n            )\n        }else{\n            return null\n        }\n    }\n    contentEnding2(content) {\n        if (content) {\n            return (\n                <table>\n                    <tbody>\n                    <tr>\n                        <th className={\"ordinary-text\"}>Endings: </th>\n                    </tr>\n                    {this.eachContent(content)}\n                    </tbody>\n                </table>\n            )\n        } else {\n            return null\n        }\n    }\n\n    contentOpenings(openings){\n        if(openings !== undefined && openings.length !== 0){\n            return openings.map((op, i) => {\n                return(\n                    <tr>\n                        <td className={\"title\"} key={i}>{op}</td>\n                    </tr>\n                )\n            })\n        }else{\n            return(\n                <tr>\n                    <td className={\"title\"}>{\"N/A\"}</td>\n                </tr>\n            )\n        }\n    }\n\n    chaptersEpisodes(selected){\n        if(selected.episodes){\n            return(\n                <p className={\"ordinary-text\"}>Episodios: <p className={\"title\"}>{selected.episodes}</p></p>\n            )\n        }else if(selected.chapters){\n            return(\n                <p className={\"ordinary-text\"}>Capítulos: <p className={\"title\"}>{selected.chapters}</p></p>\n            )\n        }else{\n            return null\n        }\n    }\n\n    eachauthor(authors){\n        return authors.map((au, i) => {\n            return(\n                <tr>\n                    <td key={i} className={\"title\"}>{au.name}</td>\n                </tr>\n            )\n        })\n    }\n\n    authors(author){\n        if(author){\n            return(\n                <table>\n                    <tbody>\n                    <tr>\n                        <th className={\"ordinary-text\"}>Autores:</th>\n                    </tr>\n                    {this.eachauthor(author)}\n                    </tbody>\n                </table>\n            )\n        }else{\n            return null\n        }\n    }\n\n    sequelContent(element){\n        return element.map((item, i) => {\n            console.log(item.name);\n            return(\n                <tr>\n                    <td key={i} className={\"title\"}>{item.name}</td>\n                </tr>\n            )\n        })\n    }\n\n    sequel(element){\n        if(element){\n            return(\n                <table>\n                    <tbody>\n                    <tr>\n                        <th className={\"ordinary-text\"}>Secuela:</th>\n                    </tr>\n                    <tr>\n                        {this.sequelContent(element)}\n                    </tr>\n                    </tbody>\n                </table>\n            )\n        }else{\n            return null\n        }\n    }\n\n    prequel(element){\n        if(element){\n            return(\n                <table>\n                    <tbody>\n                    <tr>\n                        <th className={\"ordinary-text\"}>Precuela:</th>\n                    </tr>\n                    <tr>\n                        {this.sequelContent(element)}\n                    </tr>\n                    </tbody>\n                </table>\n            )\n        }else{\n            return null\n        }\n    }\n\n    responsiveDiv(selected){\n        if(selected !== undefined){\n            return(\n                <div className={\"responsive-div\"}>\n                    <div className={\"responsive-image\"}>\n                        <img height={\"250px\"} src={selected.image_url} alt=\"\"/>\n                    </div>\n                    <div className={\"responsive-detail\"}>\n                        <p className={\"ordinary-text\"}>Título: <p className={\"title\"}>{selected.title}</p></p>\n                        <p className={\"ordinary-text\"}>Título en japonés: <p className={\"title\"}>{selected.title_japanese}</p></p>\n                        <p className={\"ordinary-text\"}>Géneros:</p>\n                        {this.contentGenres(selected.genres)}\n                        {this.chaptersEpisodes(selected)}\n                    </div>\n                    <div className={\"responsive-synopsis\"}>\n                        <p className={\"ordinary-text synopsis-content\"}>Sinopsis: <p className={\"title\"}>{selected.synopsis}</p></p>\n                    </div>\n                    <div className={\"responsive-other-series\"}>\n                        {this.prequel(selected.related.Prequel)}\n                        {this.sequel(selected.related.Sequel)}\n                        {this.authors(selected.authors)}\n                        <table>\n                            <tbody>\n                            <tr>\n                                <th className={\"ordinary-text\"}>Rank:</th>\n                                <th className={\"ordinary-text\"}>Puntaje:</th>\n                                <th className={\"ordinary-text\"}>Popularidad:</th>\n                                <th className={\"ordinary-text\"}>Clasificación:</th>\n                            </tr>\n                            <tr>\n                                <td className={\"title\"}>{selected.rank}</td>\n                                <td className={\"title\"}>{selected.score}</td>\n                                <td className={\"title\"}>{selected.popularity}</td>\n                                <td className={\"title\"}>{selected.rating}</td>\n                            </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                    <div className={\"responsive-openings\"}>\n                        {this.contentOpening2(selected.opening_themes)}\n                    </div>\n                    <div className={\"responsive-openings\"}>\n                        {this.contentEnding2(selected.ending_themes)}\n                    </div>\n                    <div className={\"trailer-btn-div\"}>\n                        {this.trailer(selected.trailer_url)}\n                    </div>\n                </div>\n            )\n        }\n    }\n\n    showDetailed(selected, content){\n        console.log(selected);\n        if(selected !== undefined && content !== undefined){\n            return(\n                <div className={\"all-detailed-bucket\"}>\n                    <div className={\"detailed-image detailed-child bucket-child\"}>\n                        <img src={selected.image_url} alt=\"\"/>\n                    </div>\n                    <div className={\"detailed-child bucket-child\"}>\n                        <p className={\"ordinary-text\"}>Título: <p className={\"title\"}>{selected.title}</p></p>\n                        <p className={\"ordinary-text\"}>Título en japonés: <p className={\"title\"}>{selected.title_japanese}</p></p>\n                        <p className={\"ordinary-text\"}>Géneros: <br/>\n                            {this.contentGenres(selected.genres)}\n                        </p>\n\n                        {this.chaptersEpisodes(selected)}\n\n                        {/*<h2>{\"Publicada: \" + selected.aired.string}</h2>*/}\n                    </div>\n                    <div className={\"other-content-div bucket-child\"}>\n                        {this.prequel(selected.related.Prequel)}\n                        {this.sequel(selected.related.Sequel)}\n                        <p className={\"ordinary-text synopsis-content\"}>Sinopsis: <p className={\"title\"}>{selected.synopsis}</p></p>\n                        {this.authors(selected.authors)}\n                        <table>\n                            <tbody>\n                            <tr>\n                                <th className={\"ordinary-text\"}>Rank:</th>\n                                <th className={\"ordinary-text\"}>Puntaje:</th>\n                                <th className={\"ordinary-text\"}>Popularidad:</th>\n                                <th className={\"ordinary-text\"}>Clasificación:</th>\n                            </tr>\n                            <tr>\n                                <td className={\"title\"}>{selected.rank}</td>\n                                <td className={\"title\"}>{selected.score}</td>\n                                <td className={\"title\"}>{selected.popularity}</td>\n                                <td className={\"title\"}>{selected.rating}</td>\n                            </tr>\n                            </tbody>\n                        </table>\n                        {this.contentOpening2(selected.opening_themes)}\n                        {this.contentEnding2(selected.ending_themes)}\n                        <div className={\"trailer-btn-div\"}>\n                            {this.trailer(selected.trailer_url)}\n                        </div>\n                    </div>\n                </div>\n            )\n        }else{\n            return null\n        }\n    }\n\n    loadingDiv(loading){\n        if(loading){\n            return(\n                <Loading/>\n            )\n        }else{\n            return null\n        }\n    }\n\n    render() {\n        const selected = this.props.detailed;\n        return(\n            <div className={\"detailed-bucket child-bucket\"}>\n                {this.loadingDiv(this.props.detailedLoading)}\n                {this.showDetailed(selected, this.props.content)}\n                {this.responsiveDiv(selected, this.props.content)}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    content:state.content,\n    detailed:state.detailed,\n    detailedLoading:state.detailedLoading\n});\n\nexport default connect(mapStateToProps)(DetailedContent)","import React from 'react'\nimport SearchResults from \"../container/searchResults\"\nimport SearchHeader from \"../container/searchHeader\";\nimport DetailedContent from \"../container/detailedContent\";\nimport '../static/main.css'\n\nlet Main = () => (\n    <div>\n        <SearchHeader/>\n        <div className={\"all-content-bucket\"}>\n            <SearchResults/>\n            <DetailedContent/>\n        </div>\n    </div>\n);\n\nexport default Main","export default {\n\n}","import initialState from './initialState'\nimport { REQUEST_CONTENT, REQUEST_DETAILED, GET_CONTENT, GET_DETAILED } from \"../actions/actionTypes\";\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case REQUEST_CONTENT:\n            return { ...state, searchLoading: true };\n        case GET_CONTENT:\n            return { ...state, content: action.payload, searchLoading: false };\n        case REQUEST_DETAILED:\n            return { ...state, detailedLoading: true };\n        case GET_DETAILED:\n            return { ...state, detailed: action.payload, detailedLoading: false };\n        default:\n            return state;\n    }\n};\n\nexport default reducer;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const baseUrl = \"https://api.jikan.moe/v3/\";","import { put, takeLatest, all, call } from 'redux-saga/effects';\nimport { baseUrl } from \"./baseUrl\";\nimport axios from 'axios'\n\nimport { REQUEST_CONTENT, REQUEST_DETAILED, GET_DETAILED, GET_CONTENT } from \"../actions/actionTypes\";\n\n/* contentWatcher es \"el inicador\" para obtener el contenido que se busca, también inicia el loading dentro de los\nresultados de búsqueda */\n\nfunction* contentWatcher() {\n    yield takeLatest(REQUEST_CONTENT, getContent)\n}\n\n/* getCcontent es el que hace el request para la obteneción de la búsqueda de anime y manga, toma en consideración el\ntipo de contenido y/o el campo de búsqueda que el usuario ingrese */\n\nfunction* getContent(param) {\n    let content;\n    if(param.param.userText){\n        content = yield call([axios, axios.get], baseUrl + 'search/' + param.param.contentType + '?q=' + param.param.userText);\n    }else{\n        content = yield call([axios, axios.get], baseUrl + 'search/' + param.param.contentType + '?score=8.00-9.0');\n    }\n    yield put({ type: GET_CONTENT, payload: content.data.results });\n}\n\n/* detailedWatcher es \"el iniciador\" del la acción para obtener el detalle del contenido, también es el que inicia el\nloading dentro del detalle del contenido */\n\nfunction* detailedWatcher() {\n    yield takeLatest(REQUEST_DETAILED, getDetailed)\n}\n\n/* getDetailed obtiene la información del elemento seleccionado, tomando en consideración si ID y el tipo de contenido\n(anime o manga), tamién finaliza el loading dentro del detalle del contenido */\n\nfunction* getDetailed(param) {\n    let contentType;\n    if(param.param.episodes || param.param.episodes === 0){\n        contentType = \"anime\"\n    }else{\n        contentType = \"manga\"\n    }\n    const detailed = yield call([axios, axios.get], baseUrl + contentType + \"/\"+param.param.contentId);\n    yield put({ type: GET_DETAILED, payload: detailed.data })\n}\n\n\n\nexport default function* rootSaga() {\n    yield all([\n        contentWatcher(),\n        detailedWatcher()\n    ]);\n}\n","import React from 'react';\nimport createSagaMiddleware from 'redux-saga';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Main from './views/Main/component/main'\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport { logger } from 'redux-logger';\nimport reducer from './reducers';\nimport * as serviceWorker from './serviceWorker';\nimport rootSaga from './sagas/index';\n\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(\n    reducer,\n    applyMiddleware(sagaMiddleware, logger),\n);\nsagaMiddleware.run(rootSaga);\n\nReactDOM.render(\n    <Provider store={store}>\n        <Main />\n    </Provider>\n    ,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}